<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_ENHO" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <TOOL>HOOK_IMPL</TOOL>
   <SHORTTEXT>Operations Data Update</SHORTTEXT>
   <ORIGINAL_OBJECT>
    <PGMID>R3TR</PGMID>
    <ORG_OBJ_TYPE>FUGR</ORG_OBJ_TYPE>
    <ORG_OBJ_NAME>/AGRI/GLCMM</ORG_OBJ_NAME>
    <ORG_MAIN_TYPE>FUGR</ORG_MAIN_TYPE>
    <ORG_MAIN_NAME>/AGRI/GLCMM</ORG_MAIN_NAME>
    <PROGRAMNAME>/AGRI/SAPLGLCMM</PROGRAMNAME>
   </ORIGINAL_OBJECT>
   <ENHANCEMENTS>
    <ENH_HOOK_IMPL>
     <PROGRAMNAME>/AGRI/SAPLGLCMM</PROGRAMNAME>
     <ENHMODE>D</ENHMODE>
     <FULL_NAME>\PR:/AGRI/SAPLGLCMM\FO:OPERATIONS_DATA_UPDATE\SE:END\EI</FULL_NAME>
     <SOURCE>
      <item>*</item>
      <item>  DATA: lt_cskey         TYPE /agri/t_glcs_key,</item>
      <item>        lt_flcma_chng    TYPE /agri/t_glflcma,</item>
      <item>        lt_csprs_chng    TYPE /agri/t_glcsprs,</item>
      <item>        lt_cmprso        TYPE /agri/t_glcmprso,</item>
      <item>        lt_messages      TYPE /agri/t_gprolog,</item>
      <item>        lt_csdoc_infocus TYPE /agri/t_glcs_doc,</item>
      <item>        ls_csprso        TYPE /agri/s_glcsprso.</item>
      <item/>
      <item>  FIELD-SYMBOLS: &lt;ls_csprso&gt; TYPE /agri/s_glcsprso.</item>
      <item/>
      <item>  CONSTANTS: c_mode_display(1) TYPE c VALUE &apos;A&apos;.</item>
      <item/>
      <item>  SELECT *</item>
      <item>    FROM /agri/glflcma</item>
      <item>    INTO TABLE @DATA(lt_glflcma)</item>
      <item>   WHERE cmnum EQ @gs_cmdoc_infocus-cmnum</item>
      <item>     AND varia EQ @lwa_cmprs-varia</item>
      <item>     AND iwerk EQ @gs_variables-selected_werks</item>
      <item>     AND astat EQ &apos;A&apos;</item>
      <item>     AND loevm EQ @space.</item>
      <item/>
      <item>  IF sy-subrc EQ 0.</item>
      <item>    SELECT * FROM /agri/glflot</item>
      <item>      INTO TABLE @DATA(lt_glflot)</item>
      <item>       FOR ALL ENTRIES IN @lt_glflcma</item>
      <item>     WHERE tplnr_fl EQ @lt_glflcma-tplnr_fl</item>
      <item>       AND iwerk    EQ @gs_variables-selected_werks</item>
      <item>       AND kfrst    EQ @space</item>
      <item>       AND loevm    EQ @space.</item>
      <item>    IF sy-subrc EQ 0.</item>
      <item>      SORT lt_glflot BY tplnr_fl.</item>
      <item/>
      <item>      LOOP AT lt_glflcma INTO DATA(ls_glflcma_x).</item>
      <item>        DATA(lv_tabix) = sy-tabix.</item>
      <item>        READ TABLE lt_glflot TRANSPORTING NO FIELDS</item>
      <item>          WITH KEY tplnr_fl = ls_glflcma_x-tplnr_fl BINARY SEARCH.</item>
      <item>        IF sy-subrc NE 0.</item>
      <item>          DELETE lt_glflcma INDEX lv_tabix.</item>
      <item>        ENDIF.</item>
      <item>      ENDLOOP.</item>
      <item>    ENDIF.</item>
      <item>  ENDIF.</item>
      <item/>
      <item>  IF lt_glflcma[] IS NOT INITIAL.</item>
      <item>*-- Getting Crop Seasons Processes</item>
      <item>      SELECT *</item>
      <item>        FROM /agri/glcsprs</item>
      <item>        INTO TABLE @DATA(lt_glcsprs)</item>
      <item>        FOR ALL ENTRIES IN @lt_glflcma</item>
      <item>       WHERE tplnr_fl EQ @lt_glflcma-tplnr_fl</item>
      <item>         AND contr    EQ @lt_glflcma-contr.</item>
      <item/>
      <item>      IF sy-subrc EQ 0.</item>
      <item>        SORT lt_glcsprs BY tplnr_fl contr.</item>
      <item>      ENDIF.</item>
      <item/>
      <item>      LOOP AT lt_glflcma INTO DATA(ls_glflcma).</item>
      <item>        REFRESH: lt_cskey, lt_flcma_chng, lt_messages.</item>
      <item>        INSERT INITIAL LINE INTO TABLE lt_cskey</item>
      <item>          ASSIGNING FIELD-SYMBOL(&lt;ls_cskey&gt;).</item>
      <item>        IF sy-subrc EQ 0.</item>
      <item>          &lt;ls_cskey&gt;-tplnr_fl = ls_glflcma-tplnr_fl.</item>
      <item>          &lt;ls_cskey&gt;-contr = ls_glflcma-contr.</item>
      <item/>
      <item>          CALL FUNCTION &apos;/AGRI/GLCS_VIEW&apos;</item>
      <item>            EXPORTING</item>
      <item>              i_mode         = c_mode_display</item>
      <item>              it_cskey       = lt_cskey</item>
      <item>            IMPORTING</item>
      <item>              et_csdoc       = lt_csdoc_infocus</item>
      <item>            EXCEPTIONS</item>
      <item>              no_data_exists = 1</item>
      <item>              OTHERS         = 2.</item>
      <item/>
      <item>        IF sy-subrc EQ 0.</item>
      <item>          READ TABLE lt_csdoc_infocus ASSIGNING FIELD-SYMBOL(&lt;ls_csdoc_infocus&gt;) INDEX 1.</item>
      <item>          IF sy-subrc EQ 0.</item>
      <item>            INSERT INITIAL LINE INTO TABLE lt_flcma_chng</item>
      <item>              ASSIGNING FIELD-SYMBOL(&lt;ls_flcma_chng&gt;).</item>
      <item>            IF sy-subrc EQ 0.</item>
      <item>              MOVE-CORRESPONDING ls_glflcma TO &lt;ls_flcma_chng&gt;.</item>
      <item>              &lt;ls_flcma_chng&gt;-updkz = c_updkz_update.</item>
      <item>              &lt;ls_csdoc_infocus&gt;-updkz = c_updkz_update.</item>
      <item>              &lt;ls_csdoc_infocus&gt;-x-cshdr-updkz = c_updkz_update.</item>
      <item>              lt_cmprso[] = gs_cmdoc_infocus-x-cmprso[].</item>
      <item>              DELETE lt_cmprso WHERE werks NE gs_variables-selected_werks.</item>
      <item>              LOOP AT lt_cmprso ASSIGNING &lt;lwa_cmprso&gt;.</item>
      <item>                CLEAR ls_csprso.</item>
      <item>                MOVE-CORRESPONDING &lt;lwa_cmprso&gt; TO ls_csprso.</item>
      <item>                ls_csprso-tplnr_fl = ls_glflcma-tplnr_fl.</item>
      <item>                ls_csprso-contr    = ls_glflcma-contr.</item>
      <item>                READ TABLE &lt;ls_csdoc_infocus&gt;-x-csprso ASSIGNING &lt;ls_csprso&gt;</item>
      <item>                  WITH KEY tplnr_fl = ls_csprso-tplnr_fl</item>
      <item>                           contr    = ls_csprso-contr</item>
      <item>                           werks    = ls_csprso-werks</item>
      <item>                           cpros    = ls_csprso-cpros</item>
      <item>                           vornr    = ls_csprso-vornr.</item>
      <item>                IF sy-subrc EQ 0.</item>
      <item>                  ls_csprso-updkz = &lt;ls_csprso&gt;-updkz.</item>
      <item>                  IF &lt;ls_csprso&gt; NE ls_csprso.</item>
      <item>                    MOVE-CORRESPONDING ls_csprso TO &lt;ls_csprso&gt;.</item>
      <item>                    IF &lt;ls_csprso&gt;-updkz NE c_updkz_new.</item>
      <item>                      &lt;ls_csprso&gt;-updkz = c_updkz_update.</item>
      <item>                    ENDIF.</item>
      <item>                  ENDIF.</item>
      <item>                ELSE.</item>
      <item>                  ls_csprso-updkz = c_updkz_new.</item>
      <item>                  gs_variables-data_changed = c_true.</item>
      <item>                  APPEND ls_csprso TO &lt;ls_csdoc_infocus&gt;-x-csprso.</item>
      <item>                ENDIF.</item>
      <item>              ENDLOOP.</item>
      <item/>
      <item>              LOOP AT &lt;ls_csdoc_infocus&gt;-x-csprs</item>
      <item>                ASSIGNING FIELD-SYMBOL(&lt;ls_csprs&gt;).</item>
      <item>                &lt;ls_csprs&gt;-updkz = c_updkz_update.</item>
      <item>              ENDLOOP.</item>
      <item/>
      <item>              CALL FUNCTION &apos;/AGRI/GLCS_SAVE&apos;</item>
      <item>                CHANGING</item>
      <item>                  ct_csdoc           = lt_csdoc_infocus</item>
      <item>                  ct_messages        = lt_messages</item>
      <item>                EXCEPTIONS</item>
      <item>                  no_change          = 1</item>
      <item>                  error_while_saving = 2</item>
      <item>                  OTHERS             = 3.</item>
      <item>            ENDIF.</item>
      <item>          ENDIF.</item>
      <item>        ENDIF.</item>
      <item>      ENDIF.</item>
      <item>    ENDLOOP.</item>
      <item>  ENDIF.</item>
      <item/>
     </SOURCE>
    </ENH_HOOK_IMPL>
   </ENHANCEMENTS>
   <SOTR>
    <item>
     <HEADER>
      <CONCEPT>1258893C31F71EDAB5FCA8F56393A487</CONCEPT>
      <CREA_LAN>P</CREA_LAN>
      <TRALA_TYPE>1</TRALA_TYPE>
      <OBJID_VEC>AAI=</OBJID_VEC>
     </HEADER>
     <ENTRIES>
      <SOTR_TEXT>
       <CONCEPT>1258893C31F71EDAB5FCA8F56393A487</CONCEPT>
       <LANGU>P</LANGU>
       <LFD_NUM>0001</LFD_NUM>
       <FLAG_CNTXT>X</FLAG_CNTXT>
       <STATUS>R</STATUS>
       <LENGTH>033</LENGTH>
       <TEXT>Operations Data Update</TEXT>
      </SOTR_TEXT>
     </ENTRIES>
    </item>
   </SOTR>
   <SOTR_USE>
    <SOTR_USE>
     <PGMID>R3TR</PGMID>
     <OBJECT>ENHO</OBJECT>
     <OBJ_NAME>ZABS_IENH_OPERATIONS_UPDATE</OBJ_NAME>
     <CONCEPT>1258893C31F71EDAB5FCA8F56393A487</CONCEPT>
     <LFD_NUM>0001</LFD_NUM>
    </SOTR_USE>
   </SOTR_USE>
  </asx:values>
 </asx:abap>
</abapGit>
