*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 23.10.2019 at 19:30:52
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZVFMACSCHE_BREAK................................*
FORM GET_DATA_ZVFMACSCHE_BREAK.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZFMACSCHED_BREAK WHERE
(VIM_WHERETAB) .
    CLEAR ZVFMACSCHE_BREAK .
ZVFMACSCHE_BREAK-MANDT =
ZFMACSCHED_BREAK-MANDT .
ZVFMACSCHE_BREAK-ACPPG =
ZFMACSCHED_BREAK-ACPPG .
ZVFMACSCHE_BREAK-IDACTV =
ZFMACSCHED_BREAK-IDACTV .
ZVFMACSCHE_BREAK-PERIOD =
ZFMACSCHED_BREAK-PERIOD .
ZVFMACSCHE_BREAK-ACDES =
ZFMACSCHED_BREAK-ACDES .
ZVFMACSCHE_BREAK-ACPRT =
ZFMACSCHED_BREAK-ACPRT .
<VIM_TOTAL_STRUC> = ZVFMACSCHE_BREAK.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVFMACSCHE_BREAK .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVFMACSCHE_BREAK.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVFMACSCHE_BREAK-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZFMACSCHED_BREAK WHERE
  ACPPG = ZVFMACSCHE_BREAK-ACPPG AND
  IDACTV = ZVFMACSCHE_BREAK-IDACTV AND
  PERIOD = ZVFMACSCHE_BREAK-PERIOD .
    IF SY-SUBRC = 0.
    DELETE ZFMACSCHED_BREAK .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZFMACSCHED_BREAK WHERE
  ACPPG = ZVFMACSCHE_BREAK-ACPPG AND
  IDACTV = ZVFMACSCHE_BREAK-IDACTV AND
  PERIOD = ZVFMACSCHE_BREAK-PERIOD .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZFMACSCHED_BREAK.
    ENDIF.
ZFMACSCHED_BREAK-MANDT =
ZVFMACSCHE_BREAK-MANDT .
ZFMACSCHED_BREAK-ACPPG =
ZVFMACSCHE_BREAK-ACPPG .
ZFMACSCHED_BREAK-IDACTV =
ZVFMACSCHE_BREAK-IDACTV .
ZFMACSCHED_BREAK-PERIOD =
ZVFMACSCHE_BREAK-PERIOD .
ZFMACSCHED_BREAK-ACDES =
ZVFMACSCHE_BREAK-ACDES .
ZFMACSCHED_BREAK-ACPRT =
ZVFMACSCHE_BREAK-ACPRT .
    IF SY-SUBRC = 0.
    UPDATE ZFMACSCHED_BREAK ##WARN_OK.
    ELSE.
    INSERT ZFMACSCHED_BREAK .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVFMACSCHE_BREAK-UPD_FLAG,
STATUS_ZVFMACSCHE_BREAK-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZVFMACSCHE_BREAK.
  SELECT SINGLE * FROM ZFMACSCHED_BREAK WHERE
ACPPG = ZVFMACSCHE_BREAK-ACPPG AND
IDACTV = ZVFMACSCHE_BREAK-IDACTV AND
PERIOD = ZVFMACSCHE_BREAK-PERIOD .
ZVFMACSCHE_BREAK-MANDT =
ZFMACSCHED_BREAK-MANDT .
ZVFMACSCHE_BREAK-ACPPG =
ZFMACSCHED_BREAK-ACPPG .
ZVFMACSCHE_BREAK-IDACTV =
ZFMACSCHED_BREAK-IDACTV .
ZVFMACSCHE_BREAK-PERIOD =
ZFMACSCHED_BREAK-PERIOD .
ZVFMACSCHE_BREAK-ACDES =
ZFMACSCHED_BREAK-ACDES .
ZVFMACSCHE_BREAK-ACPRT =
ZFMACSCHED_BREAK-ACPRT .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVFMACSCHE_BREAK USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVFMACSCHE_BREAK-ACPPG TO
ZFMACSCHED_BREAK-ACPPG .
MOVE ZVFMACSCHE_BREAK-IDACTV TO
ZFMACSCHED_BREAK-IDACTV .
MOVE ZVFMACSCHE_BREAK-PERIOD TO
ZFMACSCHED_BREAK-PERIOD .
MOVE ZVFMACSCHE_BREAK-MANDT TO
ZFMACSCHED_BREAK-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZFMACSCHED_BREAK'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZFMACSCHED_BREAK TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZFMACSCHED_BREAK'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
